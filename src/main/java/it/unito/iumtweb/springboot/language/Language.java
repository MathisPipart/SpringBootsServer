package it.unito.iumtweb.springboot.language;

import jakarta.persistence.*;

/**
 * Represents a Language entity in the database.
 * This class is managed by JPA to map Language objects to a relational database.
 */
@Entity
@Table
public class Language {

    /**
     * The unique identifier for the Language.
     * It is automatically generated by the database using an identity strategy.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The type of the Language (e.g., spoken, programming).
     * This field is mandatory and cannot be null.
     */
    @Column(nullable = false) // The "type" field is mandatory
    private String type;

    /**
     * The name of the Language.
     * This field is mandatory and cannot be null.
     */
    @Column(nullable = false)
    private String language;

    /**
     * Default no-argument constructor.
     * Required by JPA for creating instances via reflection.
     */
    public Language() {
        // Default constructor required by JPA
    }

    /**
     * Constructs a Language with the specified ID, type, and name.
     *
     * @param id       The unique identifier of the Language.
     * @param type     The type of the Language (e.g., spoken, programming).
     * @param language The name of the Language.
     */
    public Language(Long id, String type, String language) {
        this.id = id;
        this.type = type;
        this.language = language;
    }

    /**
     * Gets the unique identifier of the Language.
     *
     * @return The ID of the Language.
     */
    public Long getId() {
        return id;
    }

    /**
     * Sets the unique identifier of the Language.
     *
     * @param id The ID to set for the Language.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Gets the type of the Language.
     *
     * @return The type of the Language (e.g., spoken, programming).
     */
    public String getType() {
        return type;
    }

    /**
     * Sets the type of the Language.
     *
     * @param type The type to set for the Language.
     */
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Gets the name of the Language.
     *
     * @return The name of the Language.
     */
    public String getLanguage() {
        return language;
    }

    /**
     * Sets the name of the Language.
     *
     * @param name The name to set for the Language.
     */
    public void setLanguage(String name) {
        this.language = name;
    }
}
